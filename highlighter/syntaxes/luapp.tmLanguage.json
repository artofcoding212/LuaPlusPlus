{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lua++",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.luapp",
					"match": "\\b(var|true|false|nil|func|return|if|else|new|for|break|continue|while|switch|default|in)\\b"
				},
				{
					"name": "keyword.control.luappclass",
					"match": "\\bclass\\b\\s+([_a-zA-Z][_a-zA-Z0-9]*)",
					"captures": {
						"1": {"name": "entity.name.class.luappclass"}
					}
				},
				{
					"name": "entity.name.function.luapp",
					"match": "\\b([_a-zA-Z][_a-zA-Z0-9]*)\\("
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.luapp",
					"match": "[\\/%+*-:=!<;.]|&&|\\|\\|"
				}
			]
		},
		"identifiers": {
			"name": "variable.name.luapp",
			"match": "[_a-zA-Z][_a-zA-Z0-9]*"
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.luapp",
					"match": "[0-9]\\.?"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.luapp",
			"begin": "\"|'",
			"end": "\"|'",
			"patterns": [
				{
					"name": "constant.character.escape.luapp",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.luapp"
}